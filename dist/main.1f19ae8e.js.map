{"version":3,"sources":["main.js"],"names":["taskForm","document","querySelector","taskInput","taskList","currentTasks","window","addEventListener","checkLocalStorage","JSON","parse","localStorage","getItem","forEach","task","createNewTask","event","preventDefault","value","saveToLocalStorage","target","id","deleteTask","closest","push","setItem","stringify","taskTemplate","clonedList","importNode","content","taskTxt","innerText","appendChild","remove","taskToBeDeleted","indexOf","splice"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"../src","sourcesContent":["//  query selectors\nconst taskForm = document.querySelector(\"form\");\nconst taskInput = document.querySelector(\"#todoInput\");\nconst taskList = document.querySelector(\"#taskList\");\nlet currentTasks = [];\n\n// event listeners\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n  if (checkLocalStorage() !== true) {\n    currentTasks = JSON.parse(localStorage.getItem(\"currentTask.list\"));\n    currentTasks.forEach((task) => {\n      createNewTask(task);\n    });\n  }\n});\n\ntaskForm.addEventListener(\"submit\", (event) => {\n  event.preventDefault();\n  if (taskInput.value === \"\" || taskInput.value == null) return;\n  createNewTask(taskInput.value);\n  saveToLocalStorage(taskInput.value);\n  taskInput.value = null;\n});\n\ntaskList.addEventListener(\"click\", (event) => {\n  if (event.target.id === \"task-delete\") {\n    deleteTask(event.target.closest(\".task\"));\n  }\n});\n\n// check or save local storage\nconst checkLocalStorage = () => {\n  return (\n    localStorage.getItem(\"currentTask.list\") === null ||\n    localStorage.getItem(\"currentTask.list\" === \"\")\n  );\n};\n\nconst saveToLocalStorage = (task) => {\n  if (checkLocalStorage() !== true) {\n    currentTasks = JSON.parse(localStorage.getItem(\"currentTask.list\"));\n  }\n  currentTasks.push(task);\n  localStorage.setItem(\"currentTask.list\", JSON.stringify(currentTasks));\n};\n\n// functions for saving and deleting\nconst createNewTask = (task) => {\n  const taskTemplate = document.querySelector(\"#task-template\");\n  const clonedList = document.importNode(taskTemplate.content, true);\n  const taskTxt = clonedList.querySelector(\".task-txt\");\n  taskTxt.innerText = task;\n  taskList.appendChild(clonedList);\n};\n\nconst deleteTask = (task) => {\n  task.remove();\n  const taskToBeDeleted = currentTasks.indexOf(\n    task.querySelector(\".task-txt\").innerText\n  );\n  currentTasks.splice(taskToBeDeleted, 1);\n  localStorage.setItem(\"currentTask.list\", JSON.stringify(currentTasks));\n};\n"]}